#!/bin/sh
Usage(){
    echo "Usage:"
    echo "  manager dependent, create or delete,default create"
    echo "  alpine-deps [options]"
    echo "  alpine-deps -d base"
    echo "  alpine-deps -d build"
    echo "  alpine-deps -d base -d build"
    echo "Options:"
    echo "  -d,--delete             delete dependents"
    echo "  -h,--help               show information for help"
}

options=$(getopt -o d:h --long delete:,help -n "error" -- "$@")

if [ $? -ne 0 ]; then
   exit 0
fi

eval set -- "${options}"

# 这里不能使用数组，alpine下使用的sh是  busybox，可以切换，感兴趣的可以查找解决方法
delete_build=0
delete_base=0

while true;
do
    case $1 in
        -d|--delete)
            if [ $2 = "build" ];then
                delete_build=1
            else
                delete_base=1
            fi
            shift 2
        ;;
        -h|--help)
            Usage
            exit 0
        ;;
        *)
            break
        ;;
    esac
done

if [[ "$delete_build" -eq 0 && "$delete_base" -eq 0 ]]; then

    # 安装编译需要的依赖，这里确认不用的时候，可调用删除
    apk add --no-cache --virtual .build-deps \
        autoconf \
        g++ \
        gcc \
        make

    # 安装效验压缩包、下载需要的依赖，服务安装完成后即可删除
    apk add --no-cache --virtual .base-deps \
        dpkg-dev \
        dpkg \
        file \
        libc-dev \
        pkgconf \
        re2c \
        gnupg \
        wget
else
    if [ "$delete_build" -eq 1  ]; then

        apk del .base-deps
    fi

    if [ "$delete_base" -eq 1  ]; then

        apk del .base-deps
    fi
fi


